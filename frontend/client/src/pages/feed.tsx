import { useState, useEffect } from "react";
import { Heart, X, RotateCcw, Crown, Filter } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Card, CardContent } from "@/components/ui/card";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Slider } from "@/components/ui/slider";
import { Checkbox } from "@/components/ui/checkbox";
import { Label } from "@/components/ui/label";

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
const cities = ['–≤—Å–µ', '–ú–æ—Å–∫–≤–∞', '–°–ü–±', '–ö–∞–∑–∞–Ω—å', '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫'];
const availableInterests = ['—Å–ø–æ—Ä—Ç', '–º—É–∑—ã–∫–∞', '–∫–∏–Ω–æ', '–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è'];

const mockProfiles = [
  {
    id: 1,
    name: "–ú–∞—Ä–∏—è",
    age: 29,
    city: "–ú–æ—Å–∫–≤–∞",
    profession: "–î–∏–∑–∞–π–Ω–µ—Ä",
    distance: 2,
    image: "https://images.unsplash.com/photo-1544005313-94ddf0286df2?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&h=600",
    bio: "–¢–≤–æ—Ä—á–µ—Å–∫–∞—è –ª–∏—á–Ω–æ—Å—Ç—å, –ª—é–±–ª—é —Ä–∏—Å–æ–≤–∞—Ç—å –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤—É—é –ø–æ –≤—ã—Ö–æ–¥–Ω—ã–º. –ò—â—É –ø–æ–ø—É—Ç—á–∏–∫–∞ –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –º–∏—Ä–∞! üé®‚úàÔ∏è",
    interests: ["—Å–ø–æ—Ä—Ç", "–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", "—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è"],
  },
  {
    id: 2,
    name: "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä",
    age: 27,
    city: "–°–ü–±",
    profession: "–ò–Ω–∂–µ–Ω–µ—Ä",
    distance: 5,
    image: "https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&h=600",
    bio: "–ò–Ω—Ç—É–∑–∏–∞—Å—Ç —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –¥–Ω—ë–º, –ª—é–±–∏—Ç–µ–ª—å —Å–ø–æ—Ä—Ç–∑–∞–ª–∞ –Ω–æ—á—å—é. –í—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–æ–≤—ã–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã –∏ —Å–≤–µ–∂–∏–µ –¥–æ—Å—É–≥!",
    interests: ["—Å–ø–æ—Ä—Ç", "–º—É–∑—ã–∫–∞", "–∫–∏–Ω–æ"],
  },
  {
    id: 3,
    name: "–†–∞—á–µ–ª—å",
    age: 32,
    city: "–ö–∞–∑–∞–Ω—å",
    profession: "–£—á–∏—Ç–µ–ª—å",
    distance: 3,
    image: "https://images.unsplash.com/photo-1487412720507-e7ab37603c6f?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&h=600",
    bio: "–õ—é–±–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∫–Ω–∏–≥ –∏ –º—É–∑—ã–∫–∏. –£–±–µ–∂–¥–µ–Ω–∞, —á—Ç–æ –ª—É—á—à–∏–µ –±–µ—Å–µ–¥—ã –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –∑–∞ –∫–æ—Ñ–µ –∏ —Ö–æ—Ä–æ—à—É—é –º—É–∑—ã–∫—É üìö‚òï",
    interests: ["–º—É–∑—ã–∫–∞", "–∫–∏–Ω–æ", "–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è"],
  },
  {
    id: 4,
    name: "–î–∞–≤–∏–¥",
    age: 30,
    city: "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫",
    profession: "–ü–æ–≤–∞—Ä",
    distance: 4,
    image: "https://images.unsplash.com/photo-1500648767791-00dcc994a43e?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&h=600",
    bio: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–≤–∞—Ä, –ª—é–±–ª—é —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–µ –±–ª—é–¥–∞. –¶–µ–Ω–∏—Ç–µ–ª—å –≤–∏–Ω –∏ –ª—é–±–∏—Ç–µ–ª—å –ø–æ—Ö–æ–¥–æ–≤ –ø–æ –≤—ã—Ö–æ–¥–Ω—ã–º üç∑ü•æ",
    interests: ["–∫–∏–Ω–æ", "–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", "—Å–ø–æ—Ä—Ç"],
  },
  {
    id: 5,
    name: "–°–æ—Ñ–∏—è",
    age: 26,
    city: "–ú–æ—Å–∫–≤–∞",
    profession: "–ò–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ –π–æ–≥–µ",
    distance: 1,
    image: "https://images.unsplash.com/photo-1494790108755-2616b332e234?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&h=600",
    bio: "–ü—Ä–∏–≤–µ—Ä–∂–µ–Ω–µ—Ü –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏ –∏ –∑–¥–æ—Ä–æ–≤—å—è. –õ—é–±–ª—é –æ–±—â–∞—Ç—å—Å—è —Å –ø—Ä–∏—Ä–æ–¥–æ–π –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å –±–∞–ª–∞–Ω—Å –≤ –∂–∏–∑–Ω–∏ üßò‚Äç‚ôÄÔ∏èüåø",
    interests: ["—Å–ø–æ—Ä—Ç", "–º—É–∑—ã–∫–∞", "–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è"],
  },
  {
    id: 6,
    name: "–ú–∏—Ö–∞–∏–ª",
    age: 33,
    city: "–°–ü–±",
    profession: "–§–æ—Ç–æ–≥—Ä–∞—Ñ",
    distance: 7,
    image: "https://images.unsplash.com/photo-1492562080023-ab3db95bfbce?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&h=600",
    bio: "–ó–∞–ø–µ—á–∞—Ç–ª–µ–≤–∞—é –∫—Ä–∞—Å–∏–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã –∂–∏–∑–Ω–∏ —á–µ—Ä–µ–∑ —Å–≤–æ–π –æ–±—ä–µ–∫—Ç–∏–≤. –ò—â—É –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –∏ –æ—Ö–æ—á—É—Å—å –∑–∞ –∑–∞–∫–∞—Ç–∞–º–∏ üì∏üåÖ",
    interests: ["—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è", "–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", "–∫–∏–Ω–æ"],
  },
  {
    id: 7,
    name: "–ê–Ω–Ω–∞",
    age: 24,
    city: "–ö–∞–∑–∞–Ω—å",
    profession: "–°—Ç—É–¥–µ–Ω—Ç–∫–∞",
    distance: 6,
    image: "https://images.unsplash.com/photo-1517841905240-472988babdf9?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&h=600",
    bio: "–ò–∑—É—á–∞—é –ø—Å–∏—Ö–æ–ª–æ–≥–∏—é, –ª—é–±–ª—é —Ç–∞–Ω—Ü—ã –∏ –∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö. –í –ø–æ–∏—Å–∫–∞—Ö –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è –∏ –Ω–æ–≤—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤! üíÉüìñ",
    interests: ["–º—É–∑—ã–∫–∞", "—Å–ø–æ—Ä—Ç", "–∫–∏–Ω–æ"],
  },
  {
    id: 8,
    name: "–î–º–∏—Ç—Ä–∏–π",
    age: 35,
    city: "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫",
    profession: "–í—Ä–∞—á",
    distance: 8,
    image: "https://images.unsplash.com/photo-1582750433449-648ed127bb54?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&h=600",
    bio: "–°–ø–∞—Å–∞—é –∂–∏–∑–Ω–∏ –¥–Ω–µ–º, —á–∏—Ç–∞—é –∫–Ω–∏–≥–∏ –≤–µ—á–µ—Ä–æ–º. –¶–µ–Ω—é –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å –∏ –≥–ª—É–±–æ–∫–∏–µ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã ü©∫üìö",
    interests: ["–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", "–∫–∏–Ω–æ", "–º—É–∑—ã–∫–∞"],
  },
];

interface Filters {
  city: string;
  ageRange: [number, number];
  interests: string[];
}

export default function Feed() {
  const [currentIndex, setCurrentIndex] = useState(0);
  const [likes, setLikes] = useState<number[]>([]);
  const [passes, setPasses] = useState<number[]>([]);
  const [isAnimating, setIsAnimating] = useState(false);
  const [animationDirection, setAnimationDirection] = useState<'left' | 'right' | null>(null);
  const [isPrime, setIsPrime] = useState(false);
  const [swipeCount, setSwipeCount] = useState(0);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const [filters, setFilters] = useState<Filters>({
    city: '–≤—Å–µ',
    ageRange: [18, 60],
    interests: []
  });
  
  // –°–ø–∏—Å–æ–∫ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π
  const [filteredProfiles, setFilteredProfiles] = useState(mockProfiles);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ Prime —Å—Ç–∞—Ç—É—Å–∞ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  useEffect(() => {
    const primeStatus = localStorage.getItem('prime');
    if (primeStatus === 'true') {
      setIsPrime(true);
    }
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
    const savedFilters = localStorage.getItem('feedFilters');
    if (savedFilters) {
      try {
        const parsedFilters = JSON.parse(savedFilters);
        setFilters(parsedFilters);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤:', error);
      }
    }
  }, []);

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–π –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  useEffect(() => {
    let filtered = [...mockProfiles];

    // –§–∏–ª—å—Ç—Ä –ø–æ –≥–æ—Ä–æ–¥—É
    if (filters.city !== '–≤—Å–µ') {
      filtered = filtered.filter(profile => profile.city === filters.city);
    }

    // –§–∏–ª—å—Ç—Ä –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É
    filtered = filtered.filter(profile => 
      profile.age >= filters.ageRange[0] && profile.age <= filters.ageRange[1]
    );

    // –§–∏–ª—å—Ç—Ä –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º (—Ç–æ–ª—å–∫–æ –¥–ª—è Prime –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
    if (isPrime && filters.interests.length > 0) {
      filtered = filtered.filter(profile => 
        filters.interests.some(interest => profile.interests.includes(interest))
      );
    }

    setFilteredProfiles(filtered);
    setCurrentIndex(0); // –°–±—Ä–æ—Å–∏—Ç—å –∏–Ω–¥–µ–∫—Å –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  }, [filters, isPrime]);

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –≤ localStorage
  useEffect(() => {
    localStorage.setItem('feedFilters', JSON.stringify(filters));
  }, [filters]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const updateCityFilter = (city: string) => {
    setFilters(prev => ({ ...prev, city }));
  };

  const updateAgeFilter = (ageRange: [number, number]) => {
    setFilters(prev => ({ ...prev, ageRange }));
  };

  const updateInterestsFilter = (interest: string, checked: boolean) => {
    setFilters(prev => ({
      ...prev,
      interests: checked 
        ? [...prev.interests, interest]
        : prev.interests.filter(i => i !== interest)
    }));
  };

  const currentProfile = filteredProfiles[currentIndex];
  const isFinished = currentIndex >= filteredProfiles.length;
  const noResults = filteredProfiles.length === 0;

  const handleAction = (action: 'like' | 'pass') => {
    if (isAnimating || isFinished) return;

    setIsAnimating(true);
    setAnimationDirection(action === 'like' ? 'right' : 'left');

    if (action === 'like') {
      setLikes(prev => [...prev, currentProfile.id]);
    } else {
      setPasses(prev => [...prev, currentProfile.id]);
    }

    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —Å–≤–∞–π–ø–æ–≤
    setSwipeCount(prev => prev + 1);

    setTimeout(() => {
      setCurrentIndex(prev => prev + 1);
      setIsAnimating(false);
      setAnimationDirection(null);
    }, 300);
  };

  const resetCards = () => {
    setCurrentIndex(0);
    setLikes([]);
    setPasses([]);
    setIsAnimating(false);
    setAnimationDirection(null);
  };

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ "–Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"
  if (noResults) {
    return (
      <div className="min-h-screen bg-background">
        <div className="max-w-md mx-auto px-4 py-8">
          <div className="text-center mb-8">
            <h1 className="text-2xl font-bold text-foreground mb-2">–ó–Ω–∞–∫–æ–º—Å—Ç–≤–∞</h1>
            {!isPrime && (
              <p className="text-muted-foreground">
                –ü–æ–∏—Å–∫ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
              </p>
            )}
            {isPrime && (
              <p className="text-muted-foreground">
                –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ ‚ú®
              </p>
            )}
          </div>

          {/* –ü–∞–Ω–µ–ª—å —Ñ–∏–ª—å—Ç—Ä–æ–≤ - —Ç–∞ –∂–µ —á—Ç–æ –∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ */}
          <Card className="mb-6 bg-muted/30">
            <CardContent className="p-4">
              <div className="flex items-center gap-2 mb-4">
                <Filter className="w-4 h-4 text-muted-foreground" />
                <span className="font-medium text-foreground">–§–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞</span>
              </div>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div className="space-y-2">
                  <Label className="text-sm font-medium">–ì–æ—Ä–æ–¥</Label>
                  <Select value={filters.city} onValueChange={updateCityFilter}>
                    <SelectTrigger className="w-full" data-testid="select-city">
                      <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥" />
                    </SelectTrigger>
                    <SelectContent>
                      {cities.map(city => (
                        <SelectItem key={city} value={city} data-testid={`city-${city}`}>
                          {city === '–≤—Å–µ' ? '–í—Å–µ –≥–æ—Ä–æ–¥–∞' : city}
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>

                <div className="space-y-2">
                  <Label className="text-sm font-medium">
                    –í–æ–∑—Ä–∞—Å—Ç: {filters.ageRange[0]} - {filters.ageRange[1]} –ª–µ—Ç
                  </Label>
                  <Slider
                    value={filters.ageRange}
                    onValueChange={updateAgeFilter}
                    min={18}
                    max={60}
                    step={1}
                    className="w-full"
                    data-testid="slider-age"
                  />
                </div>
              </div>

              <div className="mt-4 space-y-2">
                <Label className="text-sm font-medium flex items-center gap-2">
                  –ò–Ω—Ç–µ—Ä–µ—Å—ã
                  {!isPrime && (
                    <Badge variant="secondary" className="text-xs">
                      <Crown className="w-3 h-3 mr-1" />
                      Prime
                    </Badge>
                  )}
                </Label>
                
                {!isPrime ? (
                  <div className="p-3 bg-muted/50 rounded-lg text-center">
                    <p className="text-sm text-muted-foreground mb-2">
                      –§–∏–ª—å—Ç—Ä –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω –≤ Prime
                    </p>
                    <Button 
                      size="sm" 
                      variant="outline"
                      onClick={() => window.location.href = '/prime'}
                      className="text-xs"
                      data-testid="button-prime-interests"
                    >
                      <Crown className="w-3 h-3 mr-1" />
                      –ü–æ–ª—É—á–∏—Ç—å Prime
                    </Button>
                  </div>
                ) : (
                  <div className="flex flex-wrap gap-2">
                    {availableInterests.map(interest => (
                      <div key={interest} className="flex items-center space-x-2">
                        <Checkbox
                          id={`interest-${interest}`}
                          checked={filters.interests.includes(interest)}
                          onCheckedChange={(checked) => 
                            updateInterestsFilter(interest, checked as boolean)
                          }
                          data-testid={`checkbox-${interest}`}
                        />
                        <Label 
                          htmlFor={`interest-${interest}`} 
                          className="text-sm capitalize cursor-pointer"
                        >
                          {interest}
                        </Label>
                      </div>
                    ))}
                  </div>
                )}
              </div>
              
              <div className="mt-4 pt-3 border-t border-border">
                <p className="text-sm text-muted-foreground text-center">
                  –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: <span className="font-medium text-foreground">0</span>
                </p>
              </div>
            </CardContent>
          </Card>

          {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ */}
          <div className="text-center">
            <div className="mb-8">
              <div className="w-24 h-24 bg-muted rounded-full flex items-center justify-center mx-auto mb-4">
                <Filter className="w-12 h-12 text-muted-foreground" />
              </div>
              <h2 className="text-xl font-bold text-foreground mb-2">
                –ù–∏–∫–æ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
              </h2>
              <p className="text-muted-foreground mb-6">
                –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –∏–ª–∏ —Å–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
              </p>
            </div>
            <Button 
              onClick={() => setFilters({ city: '–≤—Å–µ', ageRange: [18, 60], interests: [] })}
              variant="outline"
              className="px-6"
              data-testid="button-clear-filters"
            >
              <RotateCcw className="w-4 h-4 mr-2" />
              –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
            </Button>
          </div>
        </div>
      </div>
    );
  }

  if (isFinished) {
    return (
      <div className="min-h-screen bg-background flex items-center justify-center">
        <div className="text-center max-w-md mx-auto px-4">
          <div className="mb-8">
            <Heart className="w-16 h-16 text-primary mx-auto mb-4" />
            <h2 className="text-2xl font-bold text-foreground mb-2">
              –í—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!
            </h2>
            <p className="text-muted-foreground mb-6">
              –û—Ç–ª–∏—á–Ω–æ! –í—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ {likes.length} –ª–∞–π–∫–æ–≤. –ù–æ–≤—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏ –ø–æ—è–≤—è—Ç—Å—è —Å–∫–æ—Ä–æ!
            </p>
          </div>
          <Button 
            onClick={resetCards}
            className="btn-primary text-primary-foreground px-8 py-3 rounded-xl font-semibold"
            data-testid="button-reset"
          >
            <RotateCcw className="w-4 h-4 mr-2" />
            –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ
          </Button>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-background">
      <div className="max-w-md mx-auto px-4 py-8">
        <div className="text-center mb-8">
          <h1 className="text-2xl font-bold text-foreground mb-2">–ó–Ω–∞–∫–æ–º—Å—Ç–≤–∞</h1>
          {!isPrime && (
            <p className="text-muted-foreground">
              {currentIndex + 1} –∏–∑ {filteredProfiles.length}
            </p>
          )}
          {isPrime && (
            <p className="text-muted-foreground">
              –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ ‚ú®
            </p>
          )}
        </div>

        {/* –ü–∞–Ω–µ–ª—å —Ñ–∏–ª—å—Ç—Ä–æ–≤ */}
        <Card className="mb-6 bg-muted/30">
          <CardContent className="p-4">
            <div className="flex items-center gap-2 mb-4">
              <Filter className="w-4 h-4 text-muted-foreground" />
              <span className="font-medium text-foreground">–§–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞</span>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              {/* –§–∏–ª—å—Ç—Ä –ø–æ –≥–æ—Ä–æ–¥—É */}
              <div className="space-y-2">
                <Label className="text-sm font-medium">–ì–æ—Ä–æ–¥</Label>
                <Select value={filters.city} onValueChange={updateCityFilter}>
                  <SelectTrigger className="w-full" data-testid="select-city">
                    <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥" />
                  </SelectTrigger>
                  <SelectContent>
                    {cities.map(city => (
                      <SelectItem key={city} value={city} data-testid={`city-${city}`}>
                        {city === '–≤—Å–µ' ? '–í—Å–µ –≥–æ—Ä–æ–¥–∞' : city}
                      </SelectItem>
                    ))}
                  </SelectContent>
                </Select>
              </div>

              {/* –§–∏–ª—å—Ç—Ä –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É */}
              <div className="space-y-2">
                <Label className="text-sm font-medium">
                  –í–æ–∑—Ä–∞—Å—Ç: {filters.ageRange[0]} - {filters.ageRange[1]} –ª–µ—Ç
                </Label>
                <Slider
                  value={filters.ageRange}
                  onValueChange={updateAgeFilter}
                  min={18}
                  max={60}
                  step={1}
                  className="w-full"
                  data-testid="slider-age"
                />
              </div>
            </div>

            {/* –§–∏–ª—å—Ç—Ä –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º */}
            <div className="mt-4 space-y-2">
              <Label className="text-sm font-medium flex items-center gap-2">
                –ò–Ω—Ç–µ—Ä–µ—Å—ã
                {!isPrime && (
                  <Badge variant="secondary" className="text-xs">
                    <Crown className="w-3 h-3 mr-1" />
                    Prime
                  </Badge>
                )}
              </Label>
              
              {!isPrime ? (
                <div className="p-3 bg-muted/50 rounded-lg text-center">
                  <p className="text-sm text-muted-foreground mb-2">
                    –§–∏–ª—å—Ç—Ä –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω –≤ Prime
                  </p>
                  <Button 
                    size="sm" 
                    variant="outline"
                    onClick={() => window.location.href = '/prime'}
                    className="text-xs"
                    data-testid="button-prime-interests"
                  >
                    <Crown className="w-3 h-3 mr-1" />
                    –ü–æ–ª—É—á–∏—Ç—å Prime
                  </Button>
                </div>
              ) : (
                <div className="flex flex-wrap gap-2">
                  {availableInterests.map(interest => (
                    <div key={interest} className="flex items-center space-x-2">
                      <Checkbox
                        id={`interest-${interest}`}
                        checked={filters.interests.includes(interest)}
                        onCheckedChange={(checked) => 
                          updateInterestsFilter(interest, checked as boolean)
                        }
                        data-testid={`checkbox-${interest}`}
                      />
                      <Label 
                        htmlFor={`interest-${interest}`} 
                        className="text-sm capitalize cursor-pointer"
                      >
                        {interest}
                      </Label>
                    </div>
                  ))}
                </div>
              )}
            </div>
            
            {/* –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π */}
            <div className="mt-4 pt-3 border-t border-border">
              <p className="text-sm text-muted-foreground text-center">
                –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: <span className="font-medium text-foreground">{filteredProfiles.length}</span>
              </p>
            </div>
          </CardContent>
        </Card>

        {/* Prime —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ */}
        {!isPrime && swipeCount >= 3 && (
          <Card className="mb-6 bg-gradient-to-r from-yellow-50 to-orange-50 dark:from-yellow-900/20 dark:to-orange-900/20 border-yellow-200">
            <CardContent className="p-4 text-center">
              <div className="flex items-center justify-center gap-2 mb-2">
                <Crown className="w-5 h-5 text-yellow-600" />
                <span className="font-semibold text-yellow-800 dark:text-yellow-200">–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å–≤–∞–π–ø–æ–≤</span>
              </div>
              <p className="text-sm text-yellow-700 dark:text-yellow-300 mb-3">
                –í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ 3 —Å–≤–∞–π–ø–∞. –° Prime ‚Äî –±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ —Å–≤–∞–π–ø—ã!
              </p>
              <Button 
                size="sm" 
                className="bg-gradient-to-r from-yellow-500 to-orange-500 hover:from-yellow-600 hover:to-orange-600 text-white"
                onClick={() => window.location.href = '/prime'}
                data-testid="button-prime-upgrade"
              >
                <Crown className="w-4 h-4 mr-2" />
                –ü–æ–ª—É—á–∏—Ç—å Prime
              </Button>
            </CardContent>
          </Card>
        )}

        {/* Card Stack */}
        <div className="relative h-[600px] mb-8">
          {/* Current Card */}
          <div 
            className={`absolute inset-0 transition-all duration-300 ${
              isAnimating 
                ? animationDirection === 'right' 
                  ? 'transform translate-x-full rotate-12 opacity-0' 
                  : 'transform -translate-x-full -rotate-12 opacity-0'
                : 'transform translate-x-0 rotate-0 opacity-100'
            }`}
          >
            <div className="bg-card rounded-2xl card-shadow overflow-hidden h-full">
              <img
                src={currentProfile.image}
                alt={`${currentProfile.name} profile`}
                className="w-full h-2/3 object-cover"
              />
              <div className="p-6 h-1/3 flex flex-col justify-between">
                <div>
                  <h3 className="text-xl font-bold text-foreground mb-2">
                    {currentProfile.name}, {currentProfile.age}
                  </h3>
                  <p className="text-muted-foreground text-sm mb-3">
                    {currentProfile.profession} ‚Ä¢ {currentProfile.distance} –∫–º
                  </p>
                  <p className="text-foreground text-sm mb-4">
                    {currentProfile.bio}
                  </p>
                </div>
                <div className="flex flex-wrap gap-2">
                  {currentProfile.interests.map((interest) => (
                    <Badge
                      key={interest}
                      variant="secondary"
                      className="bg-muted text-muted-foreground px-3 py-1 rounded-full text-xs"
                    >
                      {interest}
                    </Badge>
                  ))}
                </div>
              </div>
            </div>
          </div>

          {/* Next Card Preview */}
          {currentIndex + 1 < filteredProfiles.length && (
            <div className="absolute inset-0 transform scale-95 -z-10 opacity-50">
              <div className="bg-card rounded-2xl card-shadow overflow-hidden h-full">
                <img
                  src={filteredProfiles[currentIndex + 1].image}
                  alt={`${filteredProfiles[currentIndex + 1].name} profile`}
                  className="w-full h-2/3 object-cover"
                />
                <div className="p-6">
                  <h3 className="text-xl font-bold text-foreground">
                    {filteredProfiles[currentIndex + 1].name}, {filteredProfiles[currentIndex + 1].age}
                  </h3>
                </div>
              </div>
            </div>
          )}
        </div>

        {/* Action Buttons */}
        <div className="flex justify-center space-x-8">
          <Button
            onClick={() => handleAction('pass')}
            disabled={isAnimating || (!isPrime && swipeCount >= 5)}
            size="lg"
            variant="outline"
            className="w-16 h-16 rounded-full border-2 border-destructive text-destructive hover:bg-destructive hover:text-destructive-foreground transition-all"
            data-testid="button-pass"
          >
            <X className="w-6 h-6" />
          </Button>
          
          <Button
            onClick={() => handleAction('like')}
            disabled={isAnimating || (!isPrime && swipeCount >= 5)}
            size="lg"
            className="w-16 h-16 rounded-full btn-primary text-primary-foreground hover:scale-110 transition-all"
            data-testid="button-like"
          >
            <Heart className="w-6 h-6" />
          </Button>
        </div>

        {/* –õ–∏–º–∏—Ç —Å–≤–∞–π–ø–æ–≤ –¥–ª—è –Ω–µ-Prime –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
        {!isPrime && swipeCount >= 5 && (
          <div className="mt-4 text-center">
            <Card className="bg-gradient-to-r from-red-50 to-pink-50 dark:from-red-900/20 dark:to-pink-900/20 border-red-200">
              <CardContent className="p-4 text-center">
                <Crown className="w-8 h-8 text-yellow-600 mx-auto mb-2" />
                <h3 className="font-semibold text-red-800 dark:text-red-200 mb-2">
                  –õ–∏–º–∏—Ç —Å–≤–∞–π–ø–æ–≤ –∏—Å—á–µ—Ä–ø–∞–Ω
                </h3>
                <p className="text-sm text-red-700 dark:text-red-300 mb-3">
                  –ü–æ–ª—É—á–∏—Ç–µ Prime –¥–ª—è –±–µ–∑–ª–∏–º–∏—Ç–Ω—ã—Ö —Å–≤–∞–π–ø–æ–≤ –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π!
                </p>
                <Button 
                  className="bg-gradient-to-r from-yellow-500 to-orange-500 hover:from-yellow-600 hover:to-orange-600 text-white"
                  onClick={() => window.location.href = '/prime'}
                  data-testid="button-prime-limit"
                >
                  <Crown className="w-4 h-4 mr-2" />
                  –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å Prime
                </Button>
              </CardContent>
            </Card>
          </div>
        )}

        {/* Progress indicator - —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–µ-Prime –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
        {!isPrime && (
          <div className="mt-8">
            <div className="flex justify-between text-xs text-muted-foreground mb-2">
              <span>–ü—Ä–æ–≥—Ä–µ—Å—Å</span>
              <span>{Math.round(((currentIndex + 1) / filteredProfiles.length) * 100)}%</span>
            </div>
            <div className="w-full bg-muted rounded-full h-2">
              <div
                className="bg-primary h-2 rounded-full transition-all duration-300"
                style={{ width: `${((currentIndex + 1) / filteredProfiles.length) * 100}%` }}
              />
            </div>
            
            {/* –°—á–µ—Ç—á–∏–∫ —Å–≤–∞–π–ø–æ–≤ –¥–ª—è –Ω–µ-Prime –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
            <div className="flex justify-between text-xs text-muted-foreground mt-2">
              <span>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Å–≤–∞–π–ø–æ–≤</span>
              <span className={swipeCount >= 5 ? "text-red-500 font-semibold" : ""}>
                {swipeCount}/5 {swipeCount >= 5 && "(–ª–∏–º–∏—Ç)"}
              </span>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}
